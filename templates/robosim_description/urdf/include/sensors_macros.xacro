<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- Camera -->
    <xacro:macro name="camera" params=" *joint_origin camera robot">
        <joint name="${camera['name']}_joint" type="fixed">
            <axis xyz="0 1 0" />
            <xacro:insert_block name="joint_origin" />
            <parent link="${camera['parent_link']}"/>
            <child link="${camera['name']}_link"/>
        </joint>
        
        <link name="${camera['name']}_link">
            <collision>
                <origin xyz="0 0 0" rpy="0 ${pi/2} 0"/>
                <geometry>
                    <cylinder radius="${camera['radius']}" length="${camera['length']}"/>
                </geometry>
            </collision>

            <visual>
                <origin xyz="0 0 0" rpy="0 ${pi/2} 0"/>
                <geometry>
                    <cylinder radius="${camera['radius']}" length="${camera['length']}"/>
                <!-- TODO add mesh insertion capabilities -->
                </geometry>
                <material name="red"/>
            </visual>

            <inertial>
                <mass value="1e-5" />
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
            </inertial>
        </link>

        <gazebo reference="${camera['name']}_link">
            <material>Gazebo/Red</material>
        </gazebo>

        <gazebo reference="${camera['name']}_link">
            <sensor type="camera" name="${camera['name']}">
                <update_rate>${camera['update_rate']}</update_rate>
                <visualize>${camera['cam_view_visualize']}</visualize>
                <camera>
                    <horizontal_fov>${camera['horizontal_fov']}</horizontal_fov>
                    <image>
                        <width>${camera['width']}</width>
                        <height>${camera['height']}</height>
                        <format>${camera['format']}</format>
                    </image>
                    <clip>
                        <near>0.02</near>
                        <far>300</far>
                    </clip>
                    <noise>
                    <type>gaussian</type>
                    <!-- Noise is sampled independently per pixel on each frame.
                            That pixel's noise value is added to each of its color
                            channels, which at that point lie in the range [0,1]. -->
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                    </noise>
                </camera>
                <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                    <alwaysOn>true</alwaysOn>
                    <updateRate>0.0</updateRate>
                    <cameraName>${robot['name']}/${camera['name']}</cameraName>
                    <imageTopicName>image_raw</imageTopicName>
                    <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                    <frameName>${camera['name']}_link</frameName>
                    <hackBaseline>0.07</hackBaseline>
                    <distortionK1>0.0</distortionK1>
                    <distortionK2>0.0</distortionK2>
                    <distortionK3>0.0</distortionK3>
                    <distortionT1>0.0</distortionT1>
                    <distortionT2>0.0</distortionT2>
                </plugin>
            </sensor>
        </gazebo>
    </xacro:macro>

    <!-- Lidar -->
    <xacro:macro name="lidar" params=" *joint_origin lidar robot">
        <joint name="${lidar['name']}_joint" type="fixed">
            <axis xyz="0 1 0" />
            <xacro:insert_block name="joint_origin" />
            <parent link="${lidar['parent_link']}"/>
            <child link="${lidar['name']}_link"/>
        </joint>

        <link name="${lidar['name']}_link">
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <cylinder radius="${lidar['radius']}" length="${lidar['length']}"/>
                </geometry>
            </collision>

            <visual>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <cylinder radius="${lidar['radius']}" length="${lidar['length']}"/>
                </geometry>
            </visual>

            <inertial>
            <mass value="1e-5" />
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
            </inertial>
        </link>

        <gazebo reference="${lidar['name']}_link">
            <material>Gazebo/Green</material>
        </gazebo>

        <gazebo reference="${lidar['name']}_link">
            <sensor type="gpu_ray" name="${lidar['name']}_sensor">
            <pose>0 0 0 0 0 0</pose>
            <visualize>${lidar['lidar_ray_visualize']}</visualize>
            <update_rate>${lidar['update_rate']}</update_rate>
            <ray>
                <scan>
                <horizontal>
                    <samples>${lidar['samples']}</samples>
                    <resolution>${lidar['horizontal_resolution']}</resolution>
                    <min_angle>${lidar['min_angle']}</min_angle>
                    <max_angle>${lidar['max_angle']}</max_angle>
                </horizontal>
                </scan>
                <range>
                    <min>${lidar['min_range']}</min>
                    <max>${lidar['max_range']}</max>
                    <resolution>${lidar['range_resolution']}</resolution>
                </range>
                <noise>
                <type>gaussian</type>
                <!-- Noise parameters based on published spec for Hokuyo laser
                    achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
                    stddev of 0.01m will put 99.7% of samples within 0.03m of the true
                    reading. -->
                <mean>0.0</mean>
                <stddev>0.01</stddev>
                </noise>
            </ray>
            <plugin name="gazebo_ros_${lidar['name']}_controller" filename="libgazebo_ros_gpu_laser.so">
                <topicName>/${robot['name']}/${lidar['name']}/scan</topicName>
                <frameName>${lidar['name']}_link</frameName>
            </plugin>
            </sensor>
        </gazebo>
    </xacro:macro>

</robot>